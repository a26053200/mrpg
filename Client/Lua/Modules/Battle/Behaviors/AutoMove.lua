---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/5/25 0:29
---

local BaseBehavior = require('Game.Modules.Common.Behavior.BaseBehavior')

---@class Game.Modules.Battle.Behaviors.AutoMove : Game.Modules.Common.Behavior.BaseBehavior
---@field New fun() : Game.Modules.Battle.Behaviors.AutoMove
---@field areaInfo AreaInfo
---@field avatar Game.Modules.Battle.Items.Avatar
---@field grid AStar.Grid
---@field overCallback Handler
---@field stepCallback Handler
---@field pathQueue List
local AutoMove = class("Game.Modules.Battle.Behaviors.AutoMove",BaseBehavior)

---@param avatar Game.Modules.Battle.Items.Avatar
function AutoMove:Ctor(avatar)
    AutoMove.super.Ctor(self, avatar.gameObject)
    self.avatar = avatar
    self.delta = FrameTime * self.avatar.avatarInfo.moveSpeed

    self.aStar = AStar.PathRequestManager
    local aStarObj = vmgr.scene.currSubScene:GetRootObjByName("A*")
    self.grid = aStarObj:GetComponent(typeof(AStar.Grid))
    self.waves = {}
end

function AutoMove:StartMove(destPos, overCallback, stepCallback)
    self.destPos = destPos
    self.overCallback = overCallback
    self.stepCallback = stepCallback
    if self:IsArrive(destPos) then
        self.aStar.RequestPath(self.avatar.transform.position, destPos, 5, 10,function(path)
            self:OnPathFound(path)
        end,function()
            if self.overCallback then
                self.overCallback:Execute(false)
            end
        end)
    else
        if self.overCallback then
            self.overCallback:Execute(true)
        end
    end
end


---@param path AStar.Path
function AutoMove:OnPathFound(path)
    self.pathQueue = List.New(Tools.ToLuaArray(path.lookPoints))
    self.pathQueue:UnShift(self.avatar.transform.position)
    if self.pathQueue:Size() == 1 then
        if self.overCallback then
            self.overCallback:Execute(true)
        end
    else
        AddEventListener(Event.Update, self.Update, self)
    end
end

function AutoMove:Update()
    if not isNull(self.gameObject) then
        return
    end
    local nextPos = self.pathQueue:Peek()
    if not self:IsArrive(nextPos) then
        self.avatar.transform.forward = (nextPos - self.avatar.transform.position).normalized
        self.avatar.transform.position = self.avatar.transform.position + self.avatar.transform.forward * self.delta
    else
        self:NextPos()
    end
end

function AutoMove:NextPos()
    local currPos = self.pathQueue:Shift()
    local nextPos = self.pathQueue:Peek()
    self.avatar.transform.forward = (nextPos - currPos).normalized
    if self.pathQueue:Size() == 1 then
        self:Stop()
        if self.overCallback then
            self.overCallback:Execute(true)
        end
    end
end

---@param path AStar.Path
function AutoMove:IsArrive(nextPos)
    local currNode = self.grid:NodeFromWorldPoint(self.avatar.transform.position)
    local nextNode = self.grid:NodeFromWorldPoint(nextPos)
    if currNode.worldPosition == nextNode.worldPosition then
        return true
    else
        return false
    end
end

function AutoMove:Stop()
    RemoveEventListener(Event.Update, self.Update)
end

function AutoMove:Dispose()
    AutoMove.super.Dispose(self)
    self:Stop()
end


return AutoMove