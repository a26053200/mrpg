---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/5/24 22:11
---

local BornWave = require("Game.Modules.Battle.Behaviors.BornWave")
local BaseBehavior = require('Game.Modules.Common.Behavior.BaseBehavior')

---@class Game.Modules.Battle.Behaviors.BornArea : Game.Modules.Common.Behavior.BaseBehavior
---@field New fun() : Game.Modules.Common.Behavior.BornArea
---@field areaInfo AreaInfo
---@field points table<number, UnityEngine.Vector3>
---@field waves table<number, Game.Modules.Battle.Behaviors.BornWave>
---@field areaRect UnityEngine.Rect
local BornArea = class("Game.Modules.Battle.Behaviors.BornWave",BaseBehavior)

---@param areaInfo AreaInfo
function BornArea:Ctor(areaInfo)
    BornArea.super.Ctor(self)
    self.areaInfo = areaInfo
    self.waves = {}

    local pos = World.points[self.areaInfo.bornPos]
    self.areaRect = AStarTools.GetAreaNodeRect(World.grid, pos, self.areaInfo.rangeX, self.areaInfo.rangeY)
    self.points = AStarTools.GetRectRandomPos(pos, self.areaRect, World.grid.nodeRadius)
end

function BornArea:Refresh()
    for i = 1, #self.areaInfo.waves do
        local wave = BornWave.New(self.areaInfo, self.areaInfo.waves[i], self.points)
        table.insert(self.waves, wave)
        wave:Refresh()
    end
end

--获取可以到达的格子
---@param src Game.Modules.Battle.Items.Monster
function BornArea:GetReachableNode(src)
    local soonNode = AStarTools.GetRandomLimitedNode(self.areaRect, src)
    if soonNode ~= nil and self:isEmptyNode(soonNode) then
        return soonNode
    else
        return nil
    end
end

---@param node AStar.Node
---@return
function BornArea:isEmptyNode(node)
    for i = 1, #self.waves do
        local wave = self.waves[i]
        for j = 1, #wave.monsterList do
            local monster = wave.monsterList[j]
            if AStarTools.isEqualNode(monster.node, node) or AStarTools.isEqualNode(monster.soonNode, node) then
                return false
            end
        end
    end
    return true
end

--获取最近的目标怪物
---@param src AStar.Node
---@return Game.Modules.Battle.Items.Monster
function BornArea:GetNearestTarget(src)
    local min = Mathf.Infinity
    local target
    for i = 1, #self.waves do
        local wave = self.waves[i]
        for j = 1, #wave.monsterList do
            local monster = wave.monsterList[j]
            local d = AStarTools.DistanceNode(src.node, monster.node)
            if d ~= 0 and d < min and not Tools.isNullObj(monster) and not monster:IsDead() then
                min = d
                target = monster
            end
        end
    end
    return target
end

--便利所有怪物
---@param func Handler
function BornArea:ForEachMonster(func)
    for i = 1, #self.waves do
        local wave = self.waves[i]
        for j = 1, #wave.monsterList do
            local monster = wave.monsterList[j]
            if  not Tools.isNullObj(monster) and not monster:IsDead() then
                func:Execute(monster)
            end
        end
    end
end

function BornArea:Active()
    for i = 1, #self.waves do
        local wave = self.waves[i]
        wave:Active()
    end
end


return BornArea