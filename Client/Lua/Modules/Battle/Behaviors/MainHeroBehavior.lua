---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zheng.
--- DateTime: 2019/5/21 22:58
---

local BaseBehavior = require('Game.Modules.Common.Behavior.BaseBehavior')
local HeroBehavior = require('Game.Modules.Battle.Behaviors.HeroBehavior')

---@class Game.Modules.Battle.Behaviors.MainHeroBehavior : Game.Modules.Battle.Behaviors.HeroBehavior
---@field New fun() : Game.Modules.Battle.Behaviors.MainHeroBehavior
local MainHeroBehavior = class("Game.Modules.Battle.Behaviors.MainHeroBehavior",HeroBehavior)

---@param hero Game.Modules.Battle.Items.MainHero
function MainHeroBehavior:Ctor(hero)
    MainHeroBehavior.super.Ctor(self, hero)

    self:AppendBehavior(self:EnterArea())
    self:AppendBehavior(self:MoveToArea())
    self:AppendBehavior(self:AttackUntilTargetDead())
end

---@param node StateNode
function MainHeroBehavior:Run()
    MainHeroBehavior.super.Run(self)
end

--移动到刷怪区域
function MainHeroBehavior:EnterArea()
    local behavior = BaseBehavior.New()

    behavior:AppendState(Handler.New(function()
        self.currArea = World.battleBehavior:GetCurrArea()
        self:NextState()
    end, self))

    return behavior
end

--移动到刷怪区域
function MainHeroBehavior:MoveToArea()
    local behavior = BaseBehavior.New()

    behavior:AppendState(Handler.New(self.DoMoveToArea, self))

    return behavior
end

function MainHeroBehavior:DoMoveToArea()
    self:Debug("MainHeroBehavior:DoMoveToArea")
    local tagPos = World.points[self.currArea.areaInfo.bornPos]
    self.hero:PlayRun()
    self.autoMove:SmoothMove(tagPos, Handler.New(self.OnMoveEnd,self))
end

function MainHeroBehavior:OnMoveEnd()
    self:Debug("MainHeroBehavior:OnMoveEnd")
    self.hero:PlayIdle()
    self:NextState()
end

--攻击单个目标知道目标死亡
function MainHeroBehavior:AttackUntilTargetDead()
    local behavior = BaseBehavior.New()

    local skills = self.hero.heroInfo.skills

    self:AppendSkill(behavior, skills[1])
    self:AppendSkill(behavior, skills[2])
    self:AppendSkill(behavior, skills[3])

    return behavior
end

function MainHeroBehavior:NextState()
    MainHeroBehavior.super.NextState(self)
end

function MainHeroBehavior:Dispose()
    MainHeroBehavior.super.Dispose(self)
end

return MainHeroBehavior